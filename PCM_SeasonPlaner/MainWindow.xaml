<Window x:Class="PCM_SeasonPlaner.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:igRibbon="http://infragistics.com/Ribbon"
    Name="Window" Height="700" MinHeight="500" Width="1300" MinWidth="1300" WindowState="Maximized"
    DataContext="{Binding Source={StaticResource Lang}}"
    Closing="Window_Closing">
   <Window.Resources>
      <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
       TargetType="Separator">
         <Setter Property="Height" Value="1"/>
         <Setter Property="Margin" Value="0,4,0,4"/>
         <Setter Property="Template">
            <Setter.Value>
               <ControlTemplate TargetType="Separator">
                  <Border BorderBrush="DarkGray" BorderThickness="1"/>
               </ControlTemplate>
            </Setter.Value>
         </Setter>
      </Style>

      <RadialGradientBrush x:Key="brushSelectedMain" GradientOrigin="0.54,0.55">
         <GradientStop Offset="0.0" Color="DarkBlue"/>
         <GradientStop Offset="0.6" Color="#60B9F4"/>
         <GradientStop Offset="0.9">
            <GradientStop.Color>
               <Color A="0" R="#60" G="#B9" B="#F4"/>
            </GradientStop.Color>
         </GradientStop>
      </RadialGradientBrush>
      <LinearGradientBrush x:Key="brushSelectedSheetGrau" StartPoint="0,0" EndPoint="0,1">
         <GradientBrush.GradientStops>
            <GradientStopCollection>
               <GradientStop Offset="0.00" Color="#F6F6F6"/>
               <GradientStop Offset="0.25" Color="#F6F6F6"/>
               <GradientStop Offset="0.25" Color="#EAEAEA"/>
               <GradientStop Offset="0.80" Color="#D9D9D9"/>
               <GradientStop Offset="1.00" Color="#FFFFFF"/>
            </GradientStopCollection>
         </GradientBrush.GradientStops>
      </LinearGradientBrush>
      <LinearGradientBrush x:Key="brushSelectedSheetOrange" StartPoint="0,0" EndPoint="0,1">
         <GradientBrush.GradientStops>
            <GradientStopCollection>
               <GradientStop Offset="0.00" Color="#FEE888"/>
               <GradientStop Offset="0.25" Color="#FEE888"/>
               <GradientStop Offset="0.25" Color="#FCCB00"/>
               <GradientStop Offset="0.80" Color="#FAA500"/>
               <GradientStop Offset="1.00" Color="#FFFFFF"/>
            </GradientStopCollection>
         </GradientBrush.GradientStops>
      </LinearGradientBrush>
      <LinearGradientBrush x:Key="brushSelectedSheet" StartPoint="0,0" EndPoint="0,1">
         <GradientBrush.GradientStops>
            <GradientStopCollection>
               <GradientStop Offset="0.00" Color="#D0E6F4"/>
               <GradientStop Offset="0.25" Color="#D0E6F4"/>
               <GradientStop Offset="0.25" Color="#A1D3F4"/>
               <GradientStop Offset="0.80" Color="#60B9F4"/>
               <GradientStop Offset="1.00" Color="#FFFFFF"/>
            </GradientStopCollection>
         </GradientBrush.GradientStops>
      </LinearGradientBrush>
      <LinearGradientBrush x:Key="brushMenuBackground" StartPoint="0,0" EndPoint="0,1">
         <GradientBrush.GradientStops>
            <GradientStopCollection>
               <GradientStop Color="LightGray" Offset="0.0"/>
               <GradientStop Color="White" Offset="1.0"/>
            </GradientStopCollection>
         </GradientBrush.GradientStops>
      </LinearGradientBrush>
      <LinearGradientBrush x:Key="brushMenuBorder" StartPoint="0,0" EndPoint="0,1">
         <GradientBrush.GradientStops>
            <GradientStopCollection>
               <GradientStop Color="DarkGray" Offset="0.0"/>
               <GradientStop Color="LightGray" Offset="1.0"/>
            </GradientStopCollection>
         </GradientBrush.GradientStops>
      </LinearGradientBrush>
      <LinearGradientBrush x:Key="brushSelectedBackground" StartPoint="0,0" EndPoint="0,1">
         <GradientBrush.GradientStops>
            <GradientStopCollection>
               <GradientStop Offset="0.00">
                  <GradientStop.Color>
                     <Color A="0" R="#A1" G="#D3" B="#F4"/>
                  </GradientStop.Color>
               </GradientStop>
               <GradientStop Offset="0.15" Color="#A1D3F4"/>
               <GradientStop Offset="0.50" Color="#D0E6F4"/>
               <GradientStop Offset="0.85" Color="#A1D3F4"/>
               <GradientStop Offset="1.00">
                  <GradientStop.Color>
                     <Color A="0" R="#A1" G="#D3" B="#F4"/>
                  </GradientStop.Color>
               </GradientStop>
            </GradientStopCollection>
         </GradientBrush.GradientStops>
      </LinearGradientBrush>
      <SolidColorBrush x:Key="brushDisabledForeground" Color="DarkGray" />
      
      <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="MenuItem">
         <Border Name="Border" >
            <Grid>
               <ContentPresenter Name="Icon" VerticalAlignment="Center" ContentSource="Icon"/>
               <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                  <Border Name="SubmenuBorder" SnapsToDevicePixels="True" Background="{StaticResource brushMenuBackground}" BorderBrush="{StaticResource brushMenuBorder}" BorderThickness="1">
                     <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                  </Border>
               </Popup>
            </Grid>
         </Border>
         <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
               <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
               <Setter TargetName="Border" Property="Background" Value="{StaticResource brushSelectedMain}"/>
               <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
               <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,4,4"/>
               <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,3"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
               <Setter Property="Foreground" Value="{StaticResource brushDisabledForeground}"/>
            </Trigger>
         </ControlTemplate.Triggers>
      </ControlTemplate>
      <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="MenuItem">
         <Border Name="Border">
            <Grid>
               <ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Grid>
         </Border>
         <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
               <Setter TargetName="Border" Property="Background" Value="{StaticResource brushSelectedSheet}"/>
               <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
               <Setter Property="Foreground"
              Value="{StaticResource brushDisabledForeground}"/>
            </Trigger>
         </ControlTemplate.Triggers>
      </ControlTemplate>
      <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="MenuItem">
         <Border Name="Border" >
            <Grid>
               <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                  <ColumnDefinition Width="13"/>
               </Grid.ColumnDefinitions>
               <ContentPresenter Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon"/>
               <ContentPresenter Name="HeaderHost" Grid.Column="1" ContentSource="Header" VerticalAlignment="Center" RecognizesAccessKey="True"/>
               <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="5,2,2,2" DockPanel.Dock="Right"/>
               <Path Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 0 7 L 4 3.5 Z" Fill="Black"/>
               <Popup Name="Popup" Placement="Right" HorizontalOffset="-4" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                  <Border Name="SubmenuBorder" SnapsToDevicePixels="True" Background="{StaticResource brushMenuBackground}" BorderBrush="{StaticResource brushMenuBorder}" BorderThickness="1" >
                     <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                  </Border>
               </Popup>
            </Grid>
         </Border>
         <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
               <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
               <Setter TargetName="Border" Property="Background" Value="{StaticResource brushSelectedBackground}"/>
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
               <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="4"/>
               <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
               <Setter Property="Foreground" Value="{StaticResource brushDisabledForeground}"/>
            </Trigger>
         </ControlTemplate.Triggers>
      </ControlTemplate>
      <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="MenuItem">
         <Border Name="Border" >
            <Grid>
               <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                  <ColumnDefinition Width="13"/>
               </Grid.ColumnDefinitions>
               <ContentPresenter Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon"/>
               <Border Name="Check" Width="12" Height="12" Visibility="Collapsed" Margin="6,0,6,0" BorderThickness="1" BorderBrush="Black">
                  <Path Name="CheckMark" Width="7" Height="7" Visibility="Hidden" SnapsToDevicePixels="False" Stroke="Black" StrokeThickness="2" Data="M 0 0 L 7 7 M 0 7 L 7 0" />
               </Border>
               <ContentPresenter Name="HeaderHost" Grid.Column="1" ContentSource="Header" VerticalAlignment="Center" RecognizesAccessKey="True"/>
               <TextBlock x:Name="InputGestureText" Grid.Column="2" VerticalAlignment="Center" Text="{TemplateBinding InputGestureText}" Margin="5,2,0,2" DockPanel.Dock="Right" />
            </Grid>
         </Border>
         <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
               <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
               <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsCheckable" Value="true">
               <Setter TargetName="Check" Property="Visibility" Value="Visible"/>
               <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
               <Setter TargetName="Border" Property="Background" Value="{StaticResource brushSelectedBackground}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
               <Setter Property="Foreground" Value="{StaticResource brushDisabledForeground}"/>
            </Trigger>
         </ControlTemplate.Triggers>
      </ControlTemplate>

      <Style x:Key="{x:Type MenuItem}" TargetType="MenuItem">
         <Setter Property="OverridesDefaultStyle" Value="True"/>
         <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
               <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}"/>
               <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
               <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
               <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
               <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
            </Trigger>
         </Style.Triggers>
      </Style>
   </Window.Resources>
   
   <Grid>
      <Grid.RowDefinitions>
         <RowDefinition Height="Auto"/>
         <RowDefinition Height="*"/>
         <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>

      <Menu x:Name="mnuMain" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Top" Width="Auto" IsMainMenu="True">
         <MenuItem>
            <MenuItem.Icon>
               <Image Source="Images\32x32\ApplicationIcon.png" Width="40" Height="40"/>
            </MenuItem.Icon>
            <MenuItem x:Name="mnuPlanerNew" Click="rbtPlanerNew_Click" Header="{Binding XPath=MainWindow/ApplicationMenu/PlanerNew/@Text}">
               <MenuItem.Icon>
                  <Image Source="Images\32x32\New_Large.png" Width="32" Height="32"/>
               </MenuItem.Icon>
            </MenuItem>
            <MenuItem x:Name="mnuDBExport" Click="rbtDBExport_Click" Header="{Binding XPath=MainWindow/ApplicationMenu/DBExport/@Text}">
               <MenuItem.Icon>
                  <Image Source="Images\32x32\Export_Large.png" Width="32" Height="32"/>
               </MenuItem.Icon>
            </MenuItem>
            <Separator/>
            <MenuItem x:Name="mnuPlanerOpen" Click="rbtPlanerOpen_Click" Header="{Binding XPath=MainWindow/ApplicationMenu/PlanerOpen/@Text}">
               <MenuItem.Icon>
                  <Image Source="Images\32x32\Open_Large.png" Width="32" Height="32"/>
               </MenuItem.Icon>
            </MenuItem>
            <MenuItem x:Name="mnuPlanerSave" Click="rbtPlanerSave_Click" Header="{Binding XPath=MainWindow/ApplicationMenu/PlanerSave/@Text}">
               <MenuItem.Icon>
                  <Image Source="Images\32x32\Save_Large.png" Width="32" Height="32"/>
               </MenuItem.Icon>
            </MenuItem>
            <Separator/>
            <MenuItem x:Name="mnuLanguage" Header="{Binding XPath=MainWindow/ApplicationMenu/LanguageSelection/@Text}" ToolTip="{Binding XPath=MainWindow/ApplicationMenu/LanguageSelection/@ToolTip}" ToolTipService.Placement="Top">
               <MenuItem.Icon>
                  <Image Source="Images\32x32\europe.png" Width="32" Height="32"/>
               </MenuItem.Icon>
            </MenuItem>
            <Separator/>
            <MenuItem x:Name="mnuOptions" Header="{Binding XPath=MainWindow/ApplicationMenu/Options/@Text}" ToolTip="{Binding XPath=MainWindow/ApplicationMenu/Options/@ToolTip}" ToolTipService.Placement="Top">
               <MenuItem.Icon>
                  <Image Source="Images\32x32\Settings_Large.png" Width="32" Height="32"/>
               </MenuItem.Icon>
               <MenuItem x:Name="mnuOptionNotifySelection" Click="rcbOptionNotifySelection_Click" Header="{Binding XPath=MainWindow/ApplicationMenu/Options/NotifySelection/@Text}" IsCheckable="True"/>
               <MenuItem x:Name="mnuOptionSelectionPlaceholder" IsEnabled="False" Click="rcbOptionSelectionPlaceholder_Click" Header="{Binding XPath=MainWindow/ApplicationMenu/Options/SelectionPlaceholder/@Text}" IsCheckable="True"/>
            </MenuItem>
            <Separator/>
            <MenuItem x:Name="mnuExit" Click="rbtExit_Click" Header="{Binding XPath=MainWindow/ApplicationMenu/Exit/@Text}">
               <MenuItem.Icon>
                  <Image Source="Images\32x32\Close_Large.png" Width="32" Height="32"/>
               </MenuItem.Icon>
            </MenuItem>
         </MenuItem>
         <MenuItem Click="rbtStartPage_Click"       Header="{Binding XPath=MainWindow/TabStart/GroupInterfaces/StartPage/@Text}"/>
         <MenuItem Click="rbtOwnTeam_Click"         Header="{Binding XPath=MainWindow/TabStart/GroupInterfaces/MyTeam/@Text}"/>
         <MenuItem Click="rbtSeasonPlaner_Click"    Header="{Binding XPath=MainWindow/TabStart/GroupInterfaces/SeasonPlaner/@Text}"/>
      </Menu>
      
      <Frame Grid.Row="1" x:Name="MainFrame" NavigationUIVisibility="Hidden"/>
   </Grid>
</Window>
